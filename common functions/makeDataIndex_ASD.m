function dataIndex = makeDataIndex_ASD(logfilepath, analysispath)
% % makeDataIndex %
%PURPOSE:   Make a table of the behavioral log files
%AUTHORS:   H Atilgan and AC Kwan 191127
%
%INPUT ARGUMENTS
%   logfilepath:  where to look for the logfiles generated by NBS Presentation
%   analysispath: where to save the behavioral .mat files
%
%OUTPUT ARGUMENTS
%   dataIndex:    a table of the data files
%

%% Look for valid log files

% search all subfolders within the specified path
AllLogfiles = dir(fullfile(logfilepath,'**','*.mat'));

nFile = size(AllLogfiles,1);
disp(['Total number of behavioral logfiles detected = ', num2str(nFile)]);

%% Create data index table

dataIndex = table(...
    (1:nFile)',...
    cell(nFile,1),...
    cell(nFile,1),...
    cell(nFile,1),...
    cell(nFile,1),...
    cell(nFile,1),...
    cell(nFile,1),...
    cell(nFile,1),...
    cell(nFile,1),...
    cell(nFile,1)...
    );

dataIndex.Properties.VariableNames = {...
    'Index',...
    'LogFileName',...
    'LogFilePath',...
    'BehPath',...
    'Animal',...
    'Genotype',...
    'Session',...
    'Protocol',...
    'RewardSize',...
    'ProtocolDay'...
    };
% possible protocols
% 'AB', 'AB-CD', 'AB-CD-DC', 'AB-DC'
% reward size: 2,3
% protocolday: how many days its on the current protocol

%%  Get info about each logfile

% load genotype files
animalList = fullfile(logfilepath, 'AnimalList.csv');
genotype = readtable(animalList);


for b = 1:nFile

    % Info about the logfile
    dataIndex.LogFilePath(b) = {AllLogfiles(b).folder};
    dataIndex.LogFileName(b) = {AllLogfiles(b).name};

    % Info about analysis file
    subfolderName = AllLogfiles(b).folder(numel(logfilepath)+2:end); %identify name of the subfolder for which data reside
    behPath = fullfile(analysispath,subfolderName);      %recreate the folder structure in /data but now in /analysis
    dataIndex.BehPath(b) = {behPath};
    dataIndex.Animal(b) = {subfolderName};
    dataIndex.Genotype(b) = genotype.Genotype(genotype.AnimalID==str2num(subfolderName));
    pattern =  '(?<=\D)(20\d{6})(?=\D)'; % Matches 8-digit numbers starting with "20" (valid for years 2000-2099)
    matches = regexp(AllLogfiles(b).name, pattern, 'match');
    dataIndex.Session(b) = matches(1);

    % regular expression for protocol and reward size
    ifCD = contains(AllLogfiles(b).name,'CD' ,'IgnoreCase', true);
    ifDC = contains(AllLogfiles(b).name, 'DC',  'IgnoreCase', true);

    if ifCD && ifDC
        dataIndex.Protocol(b) = {'AB-CD-DC'};
    elseif ifCD && ~ifDC
        dataIndex.Protocol(b) = {'AB-CD'};
    elseif ifDC && ~ifCD
        dataIndex.Protocol(b) = {'AB-DC'};
    else
        dataIndex.Protocol(b) = {'AB'};
    end

    % reward size
    pattern = 'rwdsz(\d+)';
    match = regexp(AllLogfiles(b).name, pattern,"tokens");

    if ~isempty(match)
        dataIndex.RewardSize(b) = {str2num(match{1}{1})};
    else
        dataIndex.RewardSize(b) = {2};
    end

    % count protocol day
    currAnimal = dataIndex.Animal(b);
    if b> 1
        ifNewAnimal = ~strcmp(currAnimal{1}, dataIndex.Animal{b-1});
    else
        ifNewAnimal = 1;
    end

    if ifNewAnimal
        ABDay = 1; CDDay = 1; DCDay = 1;
    end

    if strcmp(dataIndex.Protocol(b),'AB')
        dataIndex.ProtocolDay(b) = {ABDay};
        ABDay = ABDay + 1;
    elseif strcmp(dataIndex.Protocol(b), 'AB-CD')
        dataIndex.ProtocolDay(b) = {CDDay};
        CDDay = CDDay + 1;
    elseif strcmp(dataIndex.Protocol(b), 'AB-CD-DC')
        dataIndex.ProtocolDay(b) = {1};
    elseif strcmp(dataIndex.Protocol(b), 'AB-DC')
        dataIndex.ProtocolDay(b) = {DCDay};
        DCDay = DCDay + 1;
    end
end
% Create directory to store analysis
if ~exist(behPath,'dir')
    mkdir(behPath);
end

% sort the dataIndex first by animal then session date
dataIndex = sortrows(dataIndex, {'Animal', 'Session'});
end
