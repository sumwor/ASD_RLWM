function plot_logreg_genotype(input,genotype, figname, tlabel, colors)
% % plot_logreg %
%PURPOSE:   Plot logistic regression analysis of choice behavior
%AUTHORS:   AC Kwan 170518
%
%INPUT ARGUMENTS
%   input:  Structure generated by logistic_reg().
%   tlabel: Text string that will be put on top of the figure

%%
pvalThresh = 0.01;      %criterion for stat. significance for the coefficients
fracsig_Thresh = 0.5;   %if >50% of the animals/sessions have stat. sig coefficient, then denote it with a triangle in the plot

GenotypeList = unique(genotype);
maxY = 0;
if numel(input)>1  %more than 1 data set, plot mean+-sem
    n=input{1}.n;
    b_label=input{1}.b_label;
    for gg = 1:length(GenotypeList)
        temp_input = input(strcmp(genotype, GenotypeList{gg}));
        for j=1:numel(temp_input)
            temp_bias(j)=temp_input{j}.b_bias;
            temp_coeff(:,:,j)=temp_input{j}.b_coeff;

            temp_pval_bias(j)=temp_input{j}.pval_bias;
            temp_pval_coeff(:,:,j)=temp_input{j}.pval_coeff;
        end
        b_bias.(GenotypeList{gg})=nanmean(temp_bias);
        b_coeff.(GenotypeList{gg})=nanmean(temp_coeff,3);
        b_bias_sem.(GenotypeList{gg})=nanstd(temp_bias)./sqrt(numel(input));
        b_coeff_sem.(GenotypeList{gg})=nanstd(temp_coeff,[],3)./sqrt(numel(input));
        temp_maxY=max([b_bias.(GenotypeList{gg})+b_bias_sem.(GenotypeList{gg}) max(b_coeff.(GenotypeList{gg})(:)+b_coeff_sem.(GenotypeList{gg})(:))]);
        if temp_maxY > maxY
            maxY = temp_maxY;
        end
        fracsig_bias.(GenotypeList{gg})=sum(temp_pval_bias<pvalThresh)/numel(temp_input);
        for k=1:size(temp_pval_coeff,1)
            for l=1:size(temp_pval_coeff,2)
                fracsig_coeff.(GenotypeList{gg})(k,l)=sum(temp_pval_coeff(k,l,:)<pvalThresh)/numel(temp_input);
            end
        end
    end
    numcoeffType = size(b_coeff.(GenotypeList{1}),2);


    %fraction of session/animal inputs have regression coefficients that
    %are statistically significant

else        %plot the 1 data set
    n=input.n;
    b_bias=input.b_bias;
    b_coeff=input.b_coeff;
    b_label=input.b_label;

    maxY=max([b_bias max(b_coeff)]);

    fracsig_bias=(input.pval_bias<pvalThresh);
    fracsig_coeff=(input.pval_coeff<pvalThresh);
    numcoeffType = size(b_coeff, 2);
end

%number of types of coefficients
%colors = cbrewer('qual', 'Set1', numcoeffType);

trialIntoPast = -1*n;

figure;
sgtitle(['Logistic regression ', tlabel])
for j=1:numcoeffType
    subplot(2,2,j); hold on;
    for gg = 1:length(GenotypeList)

        line_handles(gg) = plot(trialIntoPast,b_coeff.(GenotypeList{gg})(:,j),'.-','MarkerSize',30,'LineWidth',3,'Color',colors{gg});
        plot([-100 100],[0 0],'k--','LineWidth',2);
        plot(0,b_bias.(GenotypeList{gg}),'.','Color',colors{gg},'MarkerSize',30);

        for k=1:numel(trialIntoPast)

            plot(trialIntoPast(k)*[1 1],b_coeff.(GenotypeList{gg})(k,j)+b_coeff_sem.(GenotypeList{gg})(k,j)*[-1 1],'-','LineWidth',3,'Color',colors{gg});

        end
        plot([0 0],b_bias.(GenotypeList{gg})+b_bias_sem.(GenotypeList{gg})*[-1 1],'Color',colors{gg},'LineWidth',3);

        xlim([-0.5 trialIntoPast(end)+0.5]);
        set(gca,'XDir','reverse')
        %ylim([-1*1.5*maxY 1.5*maxY]);
        title(b_label{j})
        %legend(b_label,'Location','Southeast');
        %legend boxoff   % Remove the legend box
        %set(legend, 'Color', 'none');
        xlabel('Trials into past')
        if j ==1
            ylabel('Outcome history weight')
        end

        if j == 2
            legend(line_handles, GenotypeList, 'box', 'off', 'Color', 'none');
        end
        %title(tlabel);
        for k=1:numel(trialIntoPast)

            if fracsig_coeff.(GenotypeList{gg})(k,j)>=fracsig_Thresh
                plot(trialIntoPast(k),maxY*(1.6-0.2*gg),'v','MarkerSize',15,'LineWidth',3,'MarkerEdgeColor',colors{gg});
            end
        end
        if fracsig_bias.(GenotypeList{gg})>=fracsig_Thresh
            plot(0,maxY*1.4,'v','MarkerSize',15,'Color',colors{gg},'LineWidth',3,'MarkerFaceColor','w','MarkerEdgeColor','k');
        end
    end



    %plot larger markers for stat. significant data points





end

print(gcf,'-dpng',fullfile(figname, tlabel));    %png format
saveas(gcf, fullfile(figname, tlabel), 'fig');
saveas(gcf, fullfile(figname, tlabel),'svg');
